@page "/Profile"
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@inject IProfileDashboardService ProfileService

<PageTitle>Profile</PageTitle>
<main>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col-md-6 text-center text-md-start">
                        <Icon Name="IconName.UserCircle" IconSize="IconSize.x4" Class="mb-2"></Icon>
                        <h1 class="my-2">@userinfo.Name</h1>
                        <h5 class="">@@@userinfo.Username.ToLower()</h5>
                    </div>
                    <div class="col-md-6 text-center text-md-end">
                        <p class="mb-0 fs-5"><Icon Name="IconName.Mail"></Icon> @userinfo.Email</p>
                        <p class="mb-0 fs-5 mt-2"><Icon Name="IconName.Calendar"></Icon> @((DateTime.Now.Date - userinfo.CreatedAt.Date).Days) Days</p>
                    </div>
                </div>
                <div class="stats-container">
                    <div class="header-container">
                        <span class="stats-title">Stats</span>
                        @if (activeTab != Pages.Dashboard)
                        {
                            <a class="see-all" @onclick="() => SetActiveTab(Pages.Dashboard)">See All</a>
                        }
                    </div>

                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-header">
                                <Icon Name="IconName.Link" class="stat-icon" />
                                <div class="stat-value">@stats.TotalURLsCount</div>
                            </div>
                            <div class="stat-label mx-4">Links</div>
                        </div>

                        <div class="stat-card">
                            <div class="stat-header">
                                <Icon Name="IconName.Mouse" class="stat-icon" />
                                <div class="stat-value">@stats.AverageClicksPerURL</div>
                            </div>
                            <div class="stat-label mx-4">Average Clicks Per Link</div>
                        </div>

                        <div class="stat-card">
                            <div class="stat-header">
                                <Icon Name="IconName.History" class="stat-icon" />
                                <div class="stat-value">@stats.ClicksYesterdayCount</div>
                            </div>
                            <div class="stat-label mx-4">Clicks Yesterday</div>
                        </div>

                        <div class="stat-card">
                            <div class="stat-header">
                                <Icon Name="IconName.ChartLine" class="stat-icon" />
                                <div class="stat-value">@stats.WeeklyGrowth%</div>
                            </div>
                            <div class="stat-label mx-4">Weekly Growth</div>
                        </div>
                    </div>
                </div>

            </div>
        </div>


        <nav class="nav flat-nav mt-5">
            <button class="nav-link @(activeTab == Pages.Dashboard ? "active" : "")" @onclick="() => SetActiveTab(Pages.Dashboard)">Dashboard</button>
            <button class="nav-link @(activeTab == Pages.URLs ? "active" : "")" @onclick="() => SetActiveTab(Pages.URLs)">Links</button>
            <button class="nav-link @(activeTab == Pages.Settings ? "active" : "")" @onclick="() => SetActiveTab(Pages.Settings)">Settings</button>
        </nav>

        @if (isLoading)
        {
            <div class="window-loading"></div>
        }
        else
        {
            <div class="pt-5">
                @if (activeTab == Pages.URLs)
                {
                    <URLTable UserID="@userinfo.ID" />
                }
                else if (activeTab == Pages.Dashboard)
                {
                    <ProfileDashboard UserID="@userinfo.ID" />
                }
                else if (activeTab == Pages.Settings)
                {
                    <ProfileSettings UserInfo="@userinfo" />
                }
            </div>
        }
    </div>
</main>

@code {
    private bool isLoading = true;
    private string? errorMessage = string.Empty;

    private enum Pages
    {
        Dashboard,
        URLs,
        Settings
    }

    private UserDTO userinfo = new()
        {
            Name = string.Empty,
            Email = string.Empty,
            Username = string.Empty
        };

    private UserStats stats = new();

    private Pages activeTab = Pages.Dashboard;
    private int urlCount = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userinfo = await AuthService.GetUserInfoAsync();
            await GetUserStats(userinfo.ID);
            isLoading = false;
            await base.OnInitializedAsync();
        }
        catch (Exception)
        {

        }
    }

    private async Task GetUserStats(int userID)
    {
        try
        {
            errorMessage = string.Empty;
            StateHasChanged();
            APIResponse<UserStats> response = await ProfileService.GetUserStats(userID);

            if (response.Success)
            {
                stats = response.Result!;
                return;
            }
            errorMessage = response.ErrorMessage;
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
        finally
        {
            StateHasChanged();
        }
    }

    private void SetActiveTab(Pages tabName)
    {
        activeTab = tabName;
    }
}
