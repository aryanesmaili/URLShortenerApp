@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IAuthenticationService AuthService
@inject CustomAuthProvider AuthProvider
 @inject Blazored.Toast.Services.IToastService ToastClient

<div class="page">
    <nav class="navbar navbar-expand-lg navigationbar">
        <div class="container">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    @if (isLoggedIn)
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="/Profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/URLShortener">Shortener</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" @onclick="Logout">Logout</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="/login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/signup">Sign Up</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <main class="content">
        <main class="main">
            <BlazoredToasts />
            @Body
        </main>
    </main>
    <footer class="footer text-white">
        <div class="container text-center">
            <p>&copy; 2024 URL Shortener. All rights reserved.</p>
        </div>
        <div class="row px-4">
            <div class="col-md-3 pt-4">
                <h5>About Us</h5>
                <p>Pexita is a URL Shortener Service Established on October 2024.</p>
            </div>
            <div class="col-md-3 pt-4">
                <h5>Help & Support</h5>
                <p>Contact us at support@pexita.com for any questions or concerns.</p>
            </div>
            <div class="col-md-3 footer-info">
                <ul>
                    <li><a href="https://example.com/" target="_blank">Instagram</a></li>
                    <li><a href="https://example.com/" target="_blank">X Account</a></li>
                    <li><a href="https://example.com/" target="_blank">Github</a></li>
                    <li><a href="https://example.com/" target="_blank">Linkedin</a></li>
                </ul>
            </div>
            <div class="col-md-3 footer-info">
                <ul>
                    <li><a href="/privacy-policy">Privacy Policy</a></li>
                    <li><a href="/terms-of-service">Terms Of Service</a></li>
                </ul>
            </div>
        </div>

    </footer>
</div>

@code
{
    private bool isLoggedIn;
    private ClaimsPrincipal? _user;
    private int userID;
    protected override async Task OnInitializedAsync()
    {
        _user = (await AuthProvider.GetAuthenticationStateAsync()).User;
        if (_user != null)
        {
            isLoggedIn = _user.Identity!.IsAuthenticated;
            try
            {
                if (isLoggedIn)
                    userID = await AuthService.GetUserIDAsync();
            }
            catch (ArgumentNullException)
            {
                await AuthService.ClearUserInfo();
                AuthProvider.MarkUserAsLoggedOut();
                ToastClient.ShowError("You are Not Logged in! Redirecting...", options => options.Position = Blazored.Toast.Configuration.ToastPosition.BottomCenter);
                await Task.Delay(2000);
                Navigation.NavigateTo("/Login", true);
            }
        }
    }

    private async Task Logout()
    {
        await AuthService.LogOutAsync();
        isLoggedIn = false;
        StateHasChanged();
        Navigation.NavigateTo("/");
    }
}